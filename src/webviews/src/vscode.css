@tailwind base;

body {
  padding: 0;
  margin: 0;
}

@tailwind components;
@tailwind utilities;

@layer components {
  .btn {
    @apply inline-flex items-center justify-center h-8 px-4 font-semibold text-sm;

    &:disabled {
      opacity: 0.5;
      cursor: not-allowed;
    }
  }

  .btn-primary {
    background: var(--vscode-badge-background);
    color: var(--vscode-badge-foreground);

    &:hover,
    &:focus,
    &:active {
      color: var(--vscode-badge-foreground) !important;
    }
  }

  .btn-secondary {
    background: var(--vscode-input-background);
    color: var(--vscode-input-foreground);
  }

  .alert {
    @apply p-4;
  }

  .alert-success {
    background-color: var(--vscode-terminal-ansiGreen);
    color: rgba(0, 0, 0, 0.5);
  }

  .alert-error {
    background-color: var(--vscode-terminal-ansiRed);
    color: rgba(0, 0, 0, 0.75);
  }
}

select {
  @apply bg-vscode-settings-dropdownBackground;
  @apply text-vscode-settings-dropdownForeground;
  @apply border-vscode-settings-dropdownBorder;
  @apply text-xs;

  &:focus {
    box-shadow: 0 0 0 1px var(--vscode-settings-dropdownListBorder);
    @apply border-vscode-settings-dropdownListBorder;
  }

  background-image: url("data:image/svg+xml,%3Csvg viewBox='0 0 20 20' stroke='white' aria-hidden='true' focusable='false' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath stroke-linecap='round' stroke-linejoin='round' stroke-width='1.5' d='M6 8l4 4 4-4'/%3E%3C/svg%3E");
}

input[type='radio'],
input[type='checkbox'] {
  &:hover,
  &:focus,
  &:active {
    box-shadow: 0 0 0 1px var(--vscode-settings-dropdownListBorder);
  }

  @apply bg-vscode-settings-checkboxBackground;
  @apply text-vscode-settings-checkboxForeground;
  @apply border-vscode-settings-checkboxBorder;

  &:checked {
    @apply bg-vscode-settings-checkboxBackground;
    @apply text-vscode-settings-headerForeground;
  }

  &:checked,
  &:checked:focus {
    @apply bg-vscode-settings-checkboxBackground;
  }
}

input[type='text'] {
  @apply h-8 text-sm bg-vscode-input-background border-vscode-input-border;
  /* background: var(--vscode-input-background) !important;
  border-color: var(--vscode-input-border) !important; */

  &::placeholder {
    @apply text-vscode-input-placeholderForeground
    /* color: var(--vscode-input-placeholderForeground); */;
  }

  &:focus {
    box-shadow: inset 0 0 0 1px var(--vscode-badge-background) !important;
    border-color: transparent !important;
  }
}

.form-error {
  @apply text-xs mt-2;
  color: var(--vscode-errorForeground);
}

.spinner {
  animation: rotate 2s linear infinite;
  z-index: 2;
  width: 100%;
  height: 100%;

  & .path {
    stroke: currentColor;
    stroke-linecap: round;
    animation: dash 1.5s ease-in-out infinite;
  }
}

@keyframes rotate {
  100% {
    transform: rotate(360deg);
  }
}

@keyframes dash {
  0% {
    stroke-dasharray: 1, 150;
    stroke-dashoffset: 0;
  }
  50% {
    stroke-dasharray: 90, 150;
    stroke-dashoffset: -35;
  }
  100% {
    stroke-dasharray: 90, 150;
    stroke-dashoffset: -124;
  }
}

.icon-success {
  color: var(--vscode-terminal-ansiGreen);
}

.icon-error {
  color: var(--vscode-errorForeground);
}
